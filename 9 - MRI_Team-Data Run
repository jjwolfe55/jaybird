INSERT INTO mri_team_runs (
team_id,
season_id,
g,
mri_batting_rc,
mri_c_baserunning_rc,
mri_pitching_rc,
mri_p_baserunning_rc,
mri_fielding_rc,
mri_created_runs,
mri_prevented_runs,
mri_run_diff)

WITH mri_calc_team_count AS (
SELECT
a.season_id,
COUNT(DISTINCT(a.team_id)) AS team_count
FROM standard_standings AS a
WHERE a.season_id BETWEEN <xx> AND <yy>
GROUP BY a.season_id
)
, mri_calc_total_unearned_runs AS (
SELECT 
a.season_id,
SUM(a.p_r) - SUM(a.p_er) AS total_unearned_runs
FROM standard_pitching AS a
GROUP BY a.season_id
)

SELECT 
a.team_id,
a.season_id,
a.g,
b.mri_batting_rc,
c.mri_c_baserunning_rc,
d.mri_pitching_rc,
e.mri_p_baserunning_rc,
f.mri_fielding_rc,
SUM(b.mri_batting_rc)+SUM(c.mri_c_baserunning_rc)+(SUM(h.total_unearned_runs)/(j.team_count)) AS mri_created_runs,
SUM(d.mri_pitching_rc)+SUM(e.mri_p_baserunning_rc)+ SUM(f.mri_fielding_rc) AS mri_prevented_runs,
((SUM(b.mri_batting_rc)+SUM(c.mri_c_baserunning_rc)+(SUM(h.total_unearned_runs)/(j.team_count)))-(SUM(d.mri_pitching_rc)+SUM(e.mri_p_baserunning_rc)+ SUM(f.mri_fielding_rc))) as run_diff
FROM standard_standings AS a
INNER JOIN (SELECT team_id,season_id, SUM(mri_batting_rc) AS mri_batting_rc FROM mri_creating_batting GROUP BY team_id,season_id) AS b
ON a.team_id = b.team_id AND a.season_id = b.season_id
INNER JOIN (SELECT team_id,season_id, SUM(mri_c_baserunning_rc) AS mri_c_baserunning_rc FROM mri_creating_baserunning GROUP BY team_id,season_id) AS c
ON a.team_id = c.team_id AND a.season_id = c.season_id
INNER JOIN (SELECT team_id,season_id, SUM(mri_pitching_rc) AS mri_pitching_rc FROM mri_preventing_pitching GROUP BY team_id,season_id) AS d
ON a.team_id = d.team_id AND a.season_id = d.season_id
INNER JOIN (SELECT team_id,season_id, SUM(mri_p_baserunning_rc) AS mri_p_baserunning_rc FROM mri_preventing_baserunning GROUP BY team_id,season_id) AS e
ON a.team_id = e.team_id AND a.season_id = e.season_id
INNER JOIN (SELECT team_id,season_id, SUM(mri_fielding_rc) AS mri_fielding_rc FROM mri_preventing_fielding GROUP BY team_id,season_id) AS f
ON a.team_id = f.team_id AND a.season_id = f.season_id
INNER JOIN mri_calc_total_unearned_runs AS h
ON a.season_id = h.season_id
INNER JOIN mri_calc_team_count AS j
ON a.season_id = j.season_id
WHERE a.season_id BETWEEN <xx> AND <yy>
GROUP BY 
a.team_id,
a.season_id,
a.g
ORDER BY a.season_id DESC;

INSERT INTO mri_team_standings (
team_id,
season_id,
g,
mri_w,
mri_l,
mri_w_pct)
WITH mri_calc_team_count AS (
SELECT
a.season_id,
COUNT(DISTINCT(a.team_id)) AS team_count
FROM standard_standings AS a
WHERE a.season_id BETWEEN <xx> AND <yy>
GROUP BY a.season_id
)
, mri_calc_total_unearned_runs AS (
SELECT 
a.season_id,
SUM(a.p_r) - SUM(a.p_er) AS total_unearned_runs
FROM standard_pitching AS a
GROUP BY a.season_id
)
, mri_calc_runs_per_win AS (
SELECT 
a.season_id AS season_id ,
b.total_runs/c.total_wins AS runs_per_win
FROM standard_standings AS a
INNER JOIN (SELECT season_id, SUM(b_r) AS total_runs FROM standard_batting GROUP BY season_id) AS b
ON a.season_id = b.season_id
INNER JOIN (SELECT season_id, SUM(w) AS total_wins FROM standard_standings GROUP BY season_id) AS c
ON a.season_id = c.season_id 
WHERE a.season_id BETWEEN <xx> AND <yy>
GROUP BY a.season_id
ORDER BY a.season_id DESC
)
SELECT 
a.team_id,
a.season_id,
a.g,
ROUND((a.g/2)+((SUM(b.mri_batting_rc)+SUM(c.mri_c_baserunning_rc)+(SUM(h.total_unearned_runs)/(j.team_count)))-(SUM(d.mri_pitching_rc)+SUM(e.mri_p_baserunning_rc)+ SUM(f.mri_fielding_rc)))/(i.runs_per_win),1) AS mri_w,
ROUND(a.g-((a.g/2)+((SUM(b.mri_batting_rc)+SUM(c.mri_c_baserunning_rc)+(SUM(h.total_unearned_runs)/(j.team_count)))-(SUM(d.mri_pitching_rc)+SUM(e.mri_p_baserunning_rc)+ SUM(f.mri_fielding_rc)))/(i.runs_per_win)),1) AS mri_l,
ROUND((((a.g/2)+((SUM(b.mri_batting_rc)+SUM(c.mri_c_baserunning_rc)+(SUM(h.total_unearned_runs)/(j.team_count)))-(SUM(d.mri_pitching_rc)+SUM(e.mri_p_baserunning_rc)+ SUM(f.mri_fielding_rc)))/(i.runs_per_win))/a.g),3) AS mri_w_pct
FROM standard_standings AS a
INNER JOIN (SELECT team_id,season_id, SUM(mri_batting_rc) AS mri_batting_rc FROM mri_creating_batting GROUP BY team_id,season_id) AS b
ON a.team_id = b.team_id AND a.season_id = b.season_id
INNER JOIN (SELECT team_id,season_id, SUM(mri_c_baserunning_rc) AS mri_c_baserunning_rc FROM mri_creating_baserunning GROUP BY team_id,season_id) AS c
ON a.team_id = c.team_id AND a.season_id = c.season_id
INNER JOIN (SELECT team_id,season_id, SUM(mri_pitching_rc) AS mri_pitching_rc FROM mri_preventing_pitching GROUP BY team_id,season_id) AS d
ON a.team_id = d.team_id AND a.season_id = d.season_id
INNER JOIN (SELECT team_id,season_id, SUM(mri_p_baserunning_rc) AS mri_p_baserunning_rc FROM mri_preventing_baserunning GROUP BY team_id,season_id) AS e
ON a.team_id = e.team_id AND a.season_id = e.season_id
INNER JOIN (SELECT team_id,season_id, SUM(mri_fielding_rc) AS mri_fielding_rc FROM mri_preventing_fielding GROUP BY team_id,season_id) AS f
ON a.team_id = f.team_id AND a.season_id = f.season_id
INNER JOIN mri_calc_total_unearned_runs AS h
ON a.season_id = h.season_id
INNER JOIN mri_calc_runs_per_win AS i
ON a.season_id = i.season_id
INNER JOIN mri_calc_team_count AS j
ON a.season_id = j.season_id
WHERE a.season_id BETWEEN <xx> AND <yy>
GROUP BY
a.team_id,
a.season_id,
a.g
ORDER BY a.season_id DESC;
