WITH game_log AS (
SELECT 
a.game_id,
a.h_team_id AS team,
b.nickname team_name,
c.v_team_id AS opponent,
e.nickname AS opponent_name,
a.season_id,
a.game_type,
a.game_date,
a.start_time,
"Home" AS location,
d.ballpark_name AS ballpark,
a.precipitation,
a.sky_condition,
a.temp,
a.wind_direction,
a.wind_speed,
a.attendance,
a.game_time AS game_duration,
(CASE WHEN a.winning_team = a.h_team_id THEN 'W' 
WHEN a.winning_team  = '' THEN 'T' ELSE 'L' END) AS  result,
a.h_team_runs AS runs,
a.v_team_runs AS runs_against
FROM lines_games AS a
INNER JOIN lookup_team_history AS b
ON a.h_team_id = b.team_id 
INNER JOIN lines_games AS c
ON a.game_id = c.game_id
LEFT JOIN lookup_ballparks AS d
ON a.ballpark = d.ballpark
INNER JOIN lookup_team_history AS e
ON a.v_team_id = e.team_id
UNION ALL
SELECT 
a.game_id,
a.v_team_id AS team,
b.nickname team_name,
c.h_team_id AS opponent,
e.nickname AS opponent_name,
a.season_id,
a.game_type,
a.game_date,
a.start_time,
"Away" AS location,
d.ballpark_name AS ballpark,
a.precipitation,
a.sky_condition,
a.temp,
a.wind_direction,
a.wind_speed,
a.attendance,
a.game_time AS game_duration,
(CASE WHEN a.winning_team = a.v_team_id THEN 'W' 
WHEN a.winning_team  = '' THEN 'T' ELSE 'L' END) AS  result,
a.v_team_runs AS runs,
a.h_team_runs AS runs_against
FROM lines_games AS a
INNER JOIN lookup_team_history AS b
ON a.v_team_id = b.team_id 
INNER JOIN lines_games AS c
ON a.game_id = c.game_id
LEFT JOIN lookup_ballparks AS d
ON a.ballpark = d.ballpark
INNER JOIN lookup_team_history AS e
ON a.h_team_id = e.team_id
)
SELECT *, rank() OVER (PARTITION BY team, season_id ORDER BY game_date ASC) AS game_num
FROM game_log
ORDER BY  team ASC, season_id DESC, game_date ASC;
